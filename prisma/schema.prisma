// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  sessions      Session[]
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  recentlyUse   DateTime?
  share         Share[]
}

model Share {
  id             String    @id @default(cuid())
  channel_model  Json
  channel_name   String?
  channel_prompt String?
  chat_content   Json[]
  anonymous      Int       @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  userId         String?
  userName       String?
  user           User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Prompt {
  id           String    @id @default(cuid())
  title        String
  icon         String
  desc         String
  content      Json
  creator      String
  creatorName  String?
  creatorEmail String?
  // 0: Pending review, 1: Approved, 2: Rejected
  status       Int       @default(0)
  like         Int       @default(0)
  usageCount   Int       @default(0)
  // market/custom/awesome-chatgpt-prompts...
  type         String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
}
